AWSTemplateFormatVersion: 2010-09-09
Description: The AWS CloudFormation template for creating cross account role to be assumed by TOOLS account to carry out deployment in this child account where the role would be created

Parameters:
  ToolsAccountID:
    Description : Account ID of the TOOLS AWS Account that initiates code deployment to this account.
    Type: String
    ConstraintDescription: Must be a valid AWS Account ID without hyphens.
    AllowedPattern: '\d{12}'
    MinLength: 12
    MaxLength: 12

Resources:
  CrossAccountDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cross-account-role-serverless-deployment
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${ToolsAccountID}:root
            Action:
              - sts:AssumeRole

  CrossAccountDeploymentPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allows pipeline in master account to deploy API Gateway, Lambda
      ManagedPolicyName: cross-account-policy-serverless-deployment
      Roles:
        - !Ref CrossAccountDeploymentRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: IAMRolesPermissions
            # Needed for passing CFExecutionRole to Cloudformation Service
            Effect: Allow
            Action:
              - iam:PassRole
            Resource: '*'
          - Sid: S3FullAccess
            # To Get and Put deployment artifacts in serverless deployment bucket
            Effect: Allow
            Action:
              - s3:*
            Resource: '*'
          - Sid: CloudFormationFullAccess
            # To create serverless deployment cloudformation stack
            Effect: Allow
            Action:
              - cloudformation:*
            Resource: '*'
          - Sid: APIGatewayReadOnlyAccess
            # Used by sls deploy to list information of all its APIs
            Effect: Allow
            Action:
              - apigateway:GET
            Resource: 
              - !Sub 'arn:aws:apigateway:${AWS::Region}::/restapis'
              - !Sub 'arn:aws:apigateway:${AWS::Region}::/restapis/*'
          - Sid: APIGatewayTaggingAccess
            # Used by sls deploy to put Tags to its APIs
            Effect: Allow
            Action:
              - apigateway:PUT
            Resource: 
              - !Sub 'arn:aws:apigateway:${AWS::Region}::/tags/*'

Outputs:
  OutCrossAccountDeploymentRole:
    Description: Cross Account Deployment Role ARN
    Value: !GetAtt CrossAccountDeploymentRole.Arn
    Export:
      Name: Serverless-CrossAccount-DeploymentRoleArn
  OutCrossAccountDeploymentPolicy:
    Description: Cross Account Deployment Policy ARN
    Value: !Ref CrossAccountDeploymentPolicy
    Export:
      Name: Serverless-CrossAccount-DeploymentPolicyArn